@model ContactList.Models.Contact

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Contact</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Phone numbers:</h4>@Html.ActionLink("Add", "AddNumber", new { id = Model.ID})
        <br />
            <table class="table">
            <tr>
                <th>Type</th>
                <th>Number</th>
            </tr>
            @for (var i = 0; i < Model.PhoneNumbers.Count; i++)
                {
                <tr>
                    <td>
                        @Html.EnumDropDownListFor(model => model.PhoneNumbers[i].Type, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.PhoneNumbers[i].number, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.HiddenFor(model => model.PhoneNumbers[i].ContactID, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.HiddenFor(model => model.PhoneNumbers[i].ID, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                    @Html.ActionLink("Delete", "Delete", new { id = Model.ID, PhId = Model.PhoneNumbers[i].ID })
                     </td>
                </tr>
            }
        </table>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
